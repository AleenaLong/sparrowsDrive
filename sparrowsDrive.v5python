{"mode":"Text","hardwareTarget":"brain","textContent":"#region VEXcode Generated Robot Configuration\nfrom vex import *\nimport urandom\n\n# Brain should be defined by default\nbrain=Brain()\n\n# Robot configuration code\nmlDrive = Motor(Ports.PORT2, GearSetting.RATIO_18_1, True)\nmrDrive = Motor(Ports.PORT7, GearSetting.RATIO_18_1, False)\ncontroller_1 = Controller(PRIMARY)\nflDrive = Motor(Ports.PORT1, GearSetting.RATIO_6_1, True)\nblDrive = Motor(Ports.PORT3, GearSetting.RATIO_6_1, True)\nfrDrive = Motor(Ports.PORT6, GearSetting.RATIO_6_1, False)\nbrDrive = Motor(Ports.PORT8, GearSetting.RATIO_6_1, False)\nintake = Motor(Ports.PORT5, GearSetting.RATIO_18_1, True)\nclamp = DigitalOut(brain.three_wire_port.a)\narm = Motor(Ports.PORT4, GearSetting.RATIO_6_1, False)\n\n\n# wait for rotation sensor to fully initialize\nwait(30, MSEC)\n\n\n# Make random actually random\ndef initializeRandomSeed():\n    wait(100, MSEC)\n    random = brain.battery.voltage(MV) + brain.battery.current(CurrentUnits.AMP) * 100 + brain.timer.system_high_res()\n    urandom.seed(int(random))\n      \n# Set random seed \ninitializeRandomSeed()\n\n\ndef play_vexcode_sound(sound_name):\n    # Helper to make playing sounds from the V5 in VEXcode easier and\n    # keeps the code cleaner by making it clear what is happening.\n    print(\"VEXPlaySound:\" + sound_name)\n    wait(5, MSEC)\n\n# add a small delay to make sure we don't print in the middle of the REPL header\nwait(200, MSEC)\n# clear the console to make sure we don't have the REPL in the console\nprint(\"\\033[2J\")\n\n#endregion VEXcode Generated Robot Configuration\n\n# ------------------------------------------\n# \n# \tProject:      VEXcode Project\n#\tAuthor:       VEX\n#\tCreated:\n#\tDescription:  VEXcode V5 Python Project\n# \n# ------------------------------------------\n\n# Library imports\nfrom vex import *\n\n# fr brokenlo0\n\n#mrDrive.spin_for(FORWARD, 90, DEGREES)\n#brDrive.spin_for(FORWARD, 90, DEGREES)\nprint(\"test1\")\n\ndef nonLinear(speed):\n    if speed == 0:\n        return 0\n    squared = speed**2\n    final = squared/128\n    if speed < 0:\n        return -final\n    if speed > 0:\n        return final\n\nintake.set_velocity(80, PERCENT)\narm.set_velocity(20, PERCENT)\n\nclampState = True\npress = False\n\nwhile True:\n    fbSpeed = controller_1.axis3.position()\n    lrSpeed = controller_1.axis1.position()\n    if -5 < fbSpeed < 5:\n        fbSpeed = 0\n    if -5 < lrSpeed < 5:\n        lrSpeed = 0\n    # intake\n    if controller_1.buttonR1.pressing():\n        intake.spin(FORWARD)\n        print(\"spinning\")\n    elif controller_1.buttonR2.pressing():\n        intake.spin(REVERSE)\n    else:\n        intake.stop()\n    if controller_1.buttonA.pressing():\n        arm.spin(FORWARD)\n    # clamp\n    if controller_1.buttonL1.pressing():\n        if not press:\n            press = True\n            if clampState:\n                clampState = False\n            elif not clampState:\n                clampState = True\n            clamp.set(clampState)\n    else:\n        press = False\n    frDrive.set_velocity(nonLinear(fbSpeed - lrSpeed)*0.78, PERCENT)\n    mrDrive.set_velocity(nonLinear(fbSpeed - lrSpeed)*0.78, PERCENT)\n    brDrive.set_velocity(nonLinear(fbSpeed - lrSpeed)*0.78, PERCENT)\n    flDrive.set_velocity(nonLinear(fbSpeed + lrSpeed)*0.8, PERCENT)\n    mlDrive.set_velocity(nonLinear(fbSpeed + lrSpeed)*0.8, PERCENT)\n    blDrive.set_velocity(nonLinear(fbSpeed + lrSpeed)*0.8, PERCENT)\n    frDrive.spin(FORWARD)\n    mrDrive.spin(FORWARD)\n    brDrive.spin(FORWARD)\n    flDrive.spin(FORWARD)\n    mlDrive.spin(FORWARD)\n    blDrive.spin(FORWARD)\n    \"\"\"\n    print(\"frDrive: \", frDrive.position(DEGREES))\n    print(\"mrDrive: \", mrDrive.position(DEGREES))\n    print(\"brDrive: \", brDrive.position(DEGREES))\n    print(\"flDrive: \", flDrive.position(DEGREES))\n    print(\"mlDrive: \", mlDrive.position(DEGREES))\n    print(\"blDrive: \", blDrive.position(DEGREES))\n    \"\"\"\n\n","textLanguage":"python","robotConfig":[{"port":[2],"name":"mlDrive","customName":true,"deviceType":"Motor","deviceClass":"motor","setting":{"reversed":"true","fwd":"forward","rev":"reverse","gear":"ratio18_1"},"triportSourcePort":22},{"port":[7],"name":"mrDrive","customName":true,"deviceType":"Motor","deviceClass":"motor","setting":{"reversed":"false","fwd":"forward","rev":"reverse","gear":"ratio18_1"},"triportSourcePort":22},{"port":[],"name":"controller_1","customName":false,"deviceType":"Controller","deviceClass":"controller","setting":{"left":"","leftDir":"false","right":"","rightDir":"false","upDown":"","upDownDir":"false","xB":"","xBDir":"false","drive":"none","id":"primary"},"triportSourcePort":22},{"port":[1],"name":"flDrive","customName":true,"deviceType":"Motor","deviceClass":"motor","setting":{"reversed":"true","fwd":"forward","rev":"reverse","gear":"ratio6_1"},"triportSourcePort":22},{"port":[3],"name":"blDrive","customName":true,"deviceType":"Motor","deviceClass":"motor","setting":{"reversed":"true","fwd":"forward","rev":"reverse","gear":"ratio6_1"},"triportSourcePort":22},{"port":[6],"name":"frDrive","customName":true,"deviceType":"Motor","deviceClass":"motor","setting":{"reversed":"false","fwd":"forward","rev":"reverse","gear":"ratio6_1"},"triportSourcePort":22},{"port":[8],"name":"brDrive","customName":true,"deviceType":"Motor","deviceClass":"motor","setting":{"reversed":"false","fwd":"forward","rev":"reverse","gear":"ratio6_1"},"triportSourcePort":22},{"port":[5],"name":"intake","customName":true,"deviceType":"Motor","deviceClass":"motor","setting":{"reversed":"true","fwd":"forward","rev":"reverse","gear":"ratio18_1"},"triportSourcePort":22},{"port":[1],"name":"clamp","customName":true,"deviceType":"DigitalOut","deviceClass":"digital_out","setting":{"id":"partner"},"triportSourcePort":22},{"port":[4],"name":"arm","customName":true,"deviceType":"Motor","deviceClass":"motor","setting":{"reversed":"false","fwd":"forward","rev":"reverse","gear":"ratio6_1"},"triportSourcePort":22}],"slot":0,"platform":"V5","sdkVersion":"20240802.15.00.00","appVersion":"4.0.7","fileFormat":"2.0.0","targetBrainGen":"First","v5Sounds":[{"name":"game over","url":"static/sounds/mixkit-arcade-retro-game-over-213.wav"}],"v5SoundsEnabled":false}